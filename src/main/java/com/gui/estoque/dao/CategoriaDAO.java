/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.gui.estoque.dao;

import com.gui.estoque.model.CategoriaModel;
import com.gui.estoque.util.ConnectionFactory;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Guilherme
 */
public class CategoriaDAO {
    
    public static void criarTabelaCategoria() throws SQLException{
        try(Connection conexao = ConnectionFactory.getConnection();
                Statement stmt = conexao.createStatement()){
            
            StringBuilder createTable = new StringBuilder();

            createTable.append("CREATE TABLE IF NOT EXISTS tb_categoria ");
            createTable.append("(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, ");
            createTable.append("categoria VARCHAR(255) ");
            createTable.append(");");

            stmt.execute(createTable.toString());
       }
    }
    
    public static String buscarCategoria(String categoria_nome) throws SQLException{
        StringBuilder sql = new StringBuilder();
        sql.append("SELECT categoria FROM tb_categoria WHERE categoria = ?");
        
        try(Connection conexao = ConnectionFactory.getConnection();
                PreparedStatement stmt = conexao.prepareStatement(sql.toString())){
                
                stmt.setString(1, categoria_nome.toUpperCase());
                
                ResultSet rs = stmt.executeQuery();
                
                if(rs.next()){
                    return rs.getString("categoria");
                }   
        }
        return "";
    }
    
    public static List<String> buscarCategorias() throws SQLException{
        List<String> categorias = new ArrayList<>();
        String sql = "SELECT categoria FROM tb_categoria";
        
        try(Connection conexao = ConnectionFactory.getConnection();
                PreparedStatement stmt = conexao.prepareStatement(sql)){
            
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()){
                categorias.add(rs.getString("categoria"));
            }
            
        }
        return categorias; 
    }
    
    public static void adicionarCategoria(CategoriaModel categoria ) throws SQLException{
        StringBuilder sql = new StringBuilder();
        StringBuilder select = new StringBuilder();
        sql.append("INSERT INTO tb_categoria (categoria) VALUES (?)");
        select.append("SELECT categoria FROM tb_categoria WHERE categoria = ?");
        try(Connection conexao = ConnectionFactory.getConnection();
                PreparedStatement stmt = conexao.prepareStatement(sql.toString());
                PreparedStatement select_stmt = conexao.prepareStatement(select.toString())){
            
            select_stmt.setString(1, categoria.getCategoria().toUpperCase());
            try(ResultSet rs = select_stmt.executeQuery()){
                if(rs.next()){
                    JOptionPane.showMessageDialog(null, "Categoria jÃ¡ cadastrada!",
                            "Aviso", JOptionPane.WARNING_MESSAGE);
                    return;
                }   
            }
            stmt.setString(1, categoria.getCategoria().toUpperCase());
            int linhas_afetadas = stmt.executeUpdate();
            
            if(linhas_afetadas > 0){
               JOptionPane.showMessageDialog(null, "Categoria cadastrada com sucesso!",
                            "Sucesso", JOptionPane.INFORMATION_MESSAGE); 
            }        
        }
    }
    
    public static void atualizarCategoria(String novo_nome) throws SQLException{
        String sql = "UPDATE tb_categoria SET categoria = ?";
        
        try(Connection conexao = ConnectionFactory.getConnection();
                PreparedStatement stmt = conexao.prepareStatement(sql)){
                
                stmt.setString(1, novo_nome.toUpperCase());
                
                int linhasAfetadas = stmt.executeUpdate();
                
                if(linhasAfetadas > 0){
                    
                    JOptionPane.showMessageDialog(null, "Categoria atualizada com sucesso!",
                            "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                }
            
        }
        
    }
    
    public static void deletarCategoria(String categoria) throws SQLException{
        String sql = "DELETE FROM tb_categoria WHERE categoria = ?";
        try(Connection conexao = ConnectionFactory.getConnection();
                PreparedStatement stmt = conexao.prepareStatement(sql)){
            
            stmt.setString(1, categoria.toUpperCase());
            
            int linhasAfetadas = stmt.executeUpdate();
            
            if(linhasAfetadas > 0){
                JOptionPane.showMessageDialog(null, "Categoria deletada com sucesso!",
                            "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
            
     
        }
        
    }
    
}
