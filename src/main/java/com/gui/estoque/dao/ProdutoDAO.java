/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.gui.estoque.dao;

import com.gui.estoque.model.ProdutoModel;
import com.gui.estoque.util.ConnectionFactory;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Guilherme
 */
public class ProdutoDAO {
    
    public static void criarTabelaProduto() throws SQLException{
        try(Connection conexao = ConnectionFactory.getConnection();
                Statement stmt = conexao.createStatement()){
            
            StringBuilder createTable = new StringBuilder();

            createTable.append("CREATE TABLE IF NOT EXISTS tb_produto ");
            createTable.append("(id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, ");
            createTable.append("descricao VARCHAR(255), ");
            createTable.append("valor_compra DECIMAL(10,2), ");
            createTable.append("valor_venda DECIMAL(10,2), ");
            createTable.append("quantidade INT, ");
            createTable.append("fornecedor_id INT, ");
            createTable.append("categoria_id INT, ");
            createTable.append("FOREIGN KEY (fornecedor_id) REFERENCES tb_fornecedor(id), ");
            createTable.append("FOREIGN KEY (categoria_id) REFERENCES tb_categoria(id) ");  
            createTable.append(");");

            stmt.execute(createTable.toString());
       }
    }
    
    public static void adicionarProduto(ProdutoModel produto) throws SQLException{
        StringBuilder sql = new StringBuilder("INSERT INTO tb_produto (");
        
        sql.append("descricao, ");
        sql.append("valor_compra, ");
        sql.append("valor_venda, ");
        sql.append("quantidade, ");
        sql.append("fornecedor_id, ");
        sql.append("categoria_id) VALUES ( ");
        sql.append("?,?,?,?,?,?);");
        
        try(Connection conexao = ConnectionFactory.getConnection();
                PreparedStatement stmt = conexao.prepareStatement(sql.toString())){
            
            stmt.setString(1, produto.getDescricao());
            stmt.setBigDecimal(2, produto.getValor_compra());
            stmt.setBigDecimal(3, produto.getValor_venda());
            stmt.setInt(4, produto.getQuantidade());
            stmt.setInt(5, produto.getFornecedor_id());
            stmt.setInt(6, produto.getCategoria_id());
            
            int linhasAfetadas = stmt.executeUpdate();
            
            if(linhasAfetadas > 0){
                JOptionPane.showMessageDialog(null, "Produto cadastrado com sucesso!",
                            "Sucesso", JOptionPane.WARNING_MESSAGE);
            }
        }
    }
}
